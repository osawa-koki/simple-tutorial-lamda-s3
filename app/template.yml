AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  python3.9

  Sample SAM Template for simple-tutorial-lamda-s3

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 30
    MemorySize: 128
  Api:
    BinaryMediaTypes:
      - "image/*"

Resources:
  MyBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: "simple-tutorial-lamda-s3-image"
      AccessControl: Private
      VersioningConfiguration:
        Status: Enabled

  MyLambdaRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: simple-tutorial-lamda-s3-role
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: simple-tutorial-lamda-s3-role-policy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Sid: AllowS3Object
                Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:PutObject
                  - s3:DeleteObject
                  - s3:ListBucket
                Resource: !Sub "arn:aws:s3:::${MyBucket}/*"
              - Sid: AllowS3List
                Effect: Allow
                Action:
                  - s3:ListBucket
                Resource: !Sub "arn:aws:s3:::${MyBucket}"

  PingFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      FunctionName: !Sub ${AWS::StackName}-ping
      PackageType: Image
      ImageConfig:
        Command: [ "app.ping" ]
      Architectures:
        - x86_64
      Events:
        HelloWorld:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /
            Method: get
    Metadata:
      Dockerfile: Dockerfile
      DockerContext: ./api
      DockerTag: python3.9-v1

  ImageUploadFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub ${AWS::StackName}-image-upload
      PackageType: Image
      ImageConfig:
        Command: [ "app.image_upload" ]
      Role: !GetAtt MyLambdaRole.Arn
      Architectures:
        - x86_64
      Events:
        HelloWorld:
          Type: Api
          Properties:
            Path: /image/upload
            Method: post
    Metadata:
      Dockerfile: Dockerfile
      DockerContext: ./api

  ImageDownloadFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub ${AWS::StackName}-image-download
      PackageType: Image
      ImageConfig:
        Command: [ "app.image_download" ]
      Role: !GetAtt MyLambdaRole.Arn
      Architectures:
        - x86_64
      Events:
        HelloWorld:
          Type: Api
          Properties:
            Path: /image/download
            Method: get
    Metadata:
      Dockerfile: Dockerfile
      DockerContext: ./api
      DockerTag: python3.9-v1
